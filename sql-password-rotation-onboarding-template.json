{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "FunctionName": {
      "Type": "String",
      "Description": "Enter a name for the Lambda function",
      "Default": "ood_sql_user_password_rotation"
    },
    "SecretID": {
      "Type": "String",
      "AllowedPattern": "^[-a-zA-Z0-9_.]*$",
      "Description": "Enter the existing Secret ID used for storing SQL user credentials"
    },
    "S3Bucket": {
      "Type": "String",
      "Description": "S3 bucket with the lambda function code",
      "Default": "mc-a<account-id>-internal-<region>"
    },
    "LambdaZipFile": {
      "Type": "String",
      "Description": "Lambda function zip filename",
      "Default": "sql_user_rotation_lambda_function.zip"
    },
    "SecretsManagerEndpoint": {
      "Type": "String",
      "Description": "Secrets Manager Endpoint for Lambda function",
      "Default": "https://secretsmanager.<region>.amazonaws.com"
    },
    "IAMRole": {
      "Type": "String",
      "Description": "Lambda Execution Role name",
      "Default": "ams_lambda_sql_passwd_rotation_role"
    }
  },
  "Resources": {
    "LambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "RoleName": {
          "Ref": "IAMRole"
        },
        "Path": "/",
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess"
        ],
        "Policies": [
          {
            "PolicyName": "lambda_secret_rotation_permissions",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Sid": "ReadPermissionsForLambda",
                  "Effect": "Allow",
                  "Action": [
                    "ec2:CreateNetworkInterface",
                    "ec2:DeleteNetworkInterface",
                    "ec2:DescribeNetworkInterfaces",
                    "secretsmanager:DescribeSecret",
                    "secretsmanager:GetRandomPassword",
                    "secretsmanager:ListSecrets",
                    "ssm:GetCommandInvocation"
                  ],
                  "Resource": "*"
                },
                {
                  "Sid": "RetrieveSecretPermissions",
                  "Effect": "Allow",
                  "Action": [
                    "secretsmanager:GetSecretValue",
                    "secretsmanager:PutSecretValue",
                    "secretsmanager:UpdateSecretVersionStage"
                  ],
                  "Resource": "*"
                },
                {
                  "Sid": "SSMPermissions",
                  "Effect": "Allow",
                  "Action": [
                    "ssm:SendCommand"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:aws:ssm:${AWS::Region}::document/AWS-RunPowerShellScript"
                    },
                    {
                      "Fn::Sub": "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:instance/*"
                    }
                  ]
                },
                {
                  "Sid": "CloudWatchPermissions",
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda*"
                    },
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda*:*"
                    }
                  ]
                },
                {
                  "Sid": "S3ReadPermissions",
                  "Action": "s3:GetObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:s3:::",
                        {
                          "Ref": "S3Bucket"
                        },
                        "/*"
                      ]
                    ]
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "S3Bucket"
          },
          "S3Key": {
            "Ref": "LambdaZipFile"
          }
        },
        "Environment": {
          "Variables": {
            "SECRETS_MANAGER_ENDPOINT": {
              "Ref": "SecretsManagerEndpoint"
            }
          }
        },
        "FunctionName": {
          "Ref": "FunctionName"
        },
        "Handler": "sql_user_rotation_lambda_function.lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "LambdaExecutionRole",
            "Arn"
          ]
        },
        "Runtime": "python3.9",
        "Timeout": "60"
      }
    },
    "LambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "LambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "secretsmanager.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:secretsmanager:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":secret:",
              {
                "Ref": "SecretID"
              },
              "*"
            ]
          ]
        }
      }
    }
  }
}